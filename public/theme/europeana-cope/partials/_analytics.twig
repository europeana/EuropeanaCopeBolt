{# Google Analytics #}
{#<script type="text/plain" data-type="application/javascript" data-name="google-analytics">#}
{#    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){#}
{#        (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),#}
{#        m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)#}
{#    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');#}

{#    ga('create', '{{ app.config.get('general/google_ua_key')|default('UA-27537877-1') }}', 'auto');#}
{#    ga('send', 'pageview');#}

{#    #}{# This script below allows analytics based on the posttype. #}
{#    {% if record is defined and record.contenttype.slug|default == 'posts' and record.posttype is defined %}#}
{#    ga('send', 'pageview',#}
{#        'post/{{ record.posttype|slugify }}/{{ record.slug }}'#}
{#    );#}
{#    {% endif %}#}

{#</script>#}

{# Hotjar Tracking Code for pro.europeana.eu #}
<script>
    (function(h,o,t,j,a,r){
        h.hj=h.hj||function(){(h.hj.q=h.hj.q||[]).push(arguments)};
        h._hjSettings={hjid:45702,hjsv:6};
        a=o.getElementsByTagName('head')[0];
        r=o.createElement('script');r.async=1;
        r.src=t+h._hjSettings.hjid+j+h._hjSettings.hjsv;
        a.appendChild(r);
    })(window,document,'https://static.hotjar.com/c/hotjar-','.js?sv=');

</script>

<!-- Matomo -->
{# Matomo tracker, with and without cookies.
   See https://matomo.org/faq/new-to-piwik/how-can-i-still-track-a-visitor-without-cookies-even-if-they-decline-the-cookie-consent/
#}

<script type="text/javascript">
    var _paq = window._paq = window._paq || [];
    /* tracker methods like "setCustomDimension" should be called before "trackPageView" */
    _paq.push(['requireCookieConsent']);
    _paq.push(['trackPageView']);
    _paq.push(['enableLinkTracking']);
    (function() {
        var u="//stats.europeana.eu/";
        _paq.push(['setTrackerUrl', u+'matomo.php']);
        _paq.push(['setSiteId', '1']);
        var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];
        g.type='text/javascript'; g.async=true; g.src=u+'matomo.js'; s.parentNode.insertBefore(g,s);
    })();
</script>

{# This updates the matomo config when the user accepts cookies. #}
<script type="text/javascript">
    const remoteManager = klaro.getManager();
    remoteManager.watch({
        update: function(manager, eventType, data) {
            if(data.type === "accept" && data.changes && data.changes.matomo === true) {
                {# Matomo consent was granted. #}
                window._paq.push(['rememberCookieConsentGiven']);
            }
        },
    });
</script>
<!-- End Matomo Code -->
