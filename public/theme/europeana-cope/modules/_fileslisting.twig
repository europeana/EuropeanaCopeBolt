{% spaceless %}
{#
Available variables
    'module':    the full module object
    'title':     title of the module
    'subtitle':  subtitle of the module
    'body':      body of the module
    'records':   array of (selected) records that belong to the module
    'allow_pager': boolean to check is the pager is available
#}
{% set override_css_id = module.override_css_id %}
{% set override_css_class = module.override_css_class %}
{% set template = module.templates %}
{% set path = module.fileslistpath %}

{#
    - @param filesystem       The filesystem to work on
    - @param files            An array of `Directory` and `File` instances
    - @param type             Either "dir" or "file", because by default files are sorted by name, not type
    - @param firstIteration   true|false, something you want to add a class if it's the top-level
#}
{% macro makeFilelisting(filesystem, files, type, firstIteration = false) %}
    {% for file in files %}
        {% if type == 'dir' and file.isDir() %}

            {% set dirFiles = filesystem.listContents( file.path ) %}
            {% if dirFiles is not empty %}

            <li class="collapse-content has-sublist ">
                <a href="#" class="expand-toggle">
                    <svg class="icon icon-folder">
                        <use xlink:href="#icon-folder"></use>
                    </svg>
                    {{ file.filename }}
                </a>
                <ul class="sublist can-expand">
                    {{ _self.makeFilelisting(filesystem, dirFiles, 'dir') }}
                    {{ _self.makeFilelisting(filesystem, dirFiles, 'file') }}
                </ul>
            </li>

            {% endif %}

        {% elseif type == 'file' and file.isFile() %}

            <li{% if firstIteration %} class="collapse-content"{% endif %}>
                <a href="/files/{{ file.path }}" download="{{ file.filename }}">
                    <svg class="icon icon-file">
                        <use xlink:href="#icon-file"></use>
                    </svg>
                    {{ file.filename }}
                    <div class="meta">
                        <span class="filesize">{{ file.sizeFormatted }}</span>
                        <span class="date-added">Added {{ file.carbon|localedatetime("%d/%m/%Y") }}</span>
                    </div>
                </a>
            </li>

        {% endif %}
    {% endfor %}
{% endmacro %}

{% endspaceless %}

{% set files = [] %}
{% set filesystem = app.filesystem.getFilesystem('files') %}
{% if filesystem.has(path) %}
    {# {% set directory = filesystem.get(path) %} #}
    {% set files = filesystem.listContents(path) %}
{% endif %}

{% if files is not empty %}

<section {% if override_css_id %}id="{{ override_css_id }}"{% endif %} class="file-browser file-content-module {%- if override_css_class %} {{ override_css_class }}{% endif -%}">
    <div class="collapse-header">
        <p class="content-kind">
            <svg class="icon icon-folder">
                <use xlink:href="#icon-folder"></use>
            </svg>
            <span>Folder</span>
        </p>

        {% if title is not empty %}
            <h3 class="expand-toggle">{{ title }}</h3>
        {% else %}
            <h3 class="expand-toggle">{{ path|slugify }}</h3>
        {% endif %}

        <a class="expand-toggle" href="#">
            <svg class="icon icon-facet_up">
                <use xlink:href="#icon-facet_up"></use>
            </svg>
            <span class="sr-only">Expand all folders</span>
        </a>
    </div>
    <ul class="mainlist can-expand">
        {{ _self.makeFilelisting(filesystem, files, 'dir', true) }}
        {{ _self.makeFilelisting(filesystem, files, 'file', true) }}
    </ul>
</section>

{% else %}

    {# ---  The field `filelist_downloads` has no files --- #}

{% endif %}
